name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test & Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Package extension
      run: |
        npm install -g @vscode/vsce
        vsce package --no-dependencies
        
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      with:
        name: extension-vsix
        path: "*.vsix"
        retention-days: 30

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Check for vulnerabilities
      run: npm audit --audit-level high --dry-run

  publish:
    name: Publish to Marketplace
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile extension
      run: npm run compile
      
    - name: Install VSCE
      run: npm install -g @vscode/vsce
      
    - name: Publish to VS Code Marketplace
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
      run: vsce publish --no-dependencies
      
    - name: Create GitHub Release Asset
      run: |
        vsce package --no-dependencies
        echo "VSIX_FILE=$(ls *.vsix)" >> $GITHUB_ENV
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ env.VSIX_FILE }}
        asset_name: ${{ env.VSIX_FILE }}
        asset_content_type: application/zip
